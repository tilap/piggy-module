{"version":3,"sources":["Storage/Abstract.js"],"names":[],"mappings":"uuBAIqB,eAAe,aAIvB,SAJQ,eAAe,EAIL,KAAjB,UAAU,qDAAC,IAAI,mCAJR,eAAe,EAShC,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC,CAC/B,aAVkB,eAAe,mBA0B/B,aAAC,QAAQ,CAAE,OAAO,CAAE,CACrB,MAAM,IAAI,KAAK,CAAC,oCAAoC,CAAC,CAAC,CACvD,sBAUK,gBAAC,MAAM,CAAE,CACb,MAAM,IAAI,KAAK,CAAC,oCAAoC,CAAC,CAAC,CACvD,sBAYK,iBAAwC,KAAvC,QAAQ,qDAAC,EAAE,kBAAE,SAAS,qDAAC,EAAE,kBAAE,OAAO,qDAAC,EAAE,cAC1C,MAAM,IAAI,KAAK,CAAC,oCAAoC,CAAC,CAAC,CACvD,sBAUK,iBAAC,QAAQ,CAAE,CACf,MAAM,IAAI,KAAK,CAAC,oCAAoC,CAAC,CAAC,CACvD,wBArDa,cAAG,CACf,OAAO,IAAI,CAAC,WAAW,CAAC,CACzB,WAfkB,eAAe,2BAAf,eAAe","file":"Storage/Abstract.js","sourcesContent":["/**\n * Abstract storage for Vo.\n * Any method here must be implemented. If not, will throw an Error\n */\nexport default class AbstractStorage {\n  /**\n   * @param {?Object|Array|String} collection - the sotorage collection\n   */\n  constructor(collection=null) {\n    /**\n     * @type {?Object|Array|String}\n     * @private\n     */\n    this._collection = collection;\n  }\n\n  /** @type {?Object|Array|String} */\n  get collection() {\n    return this._collection;\n  }\n\n  /**\n   * Get a list of data Object from criteria and options\n   *\n   * @param {Object} criteria - mongodb criteria style\n   * @param {Object} options - mongodb options style\n   * @return {Promise<Object[], Error>}\n   * @access public\n   * @abstract\n   */\n  get(criteria, options) {\n    throw new Error('AbstractStorage: Method not set up');\n  }\n\n  /**\n   * Insert many data Object in storage\n   *\n   * @param [Object[]] dataArray - a list of data Object\n   * @return {Promise<Object[], Error>} - inserted data Object list\n   * @access public\n   * @abstract\n   */\n  insert(voData) {\n    throw new Error('AbstractStorage: Method not set up');\n  }\n\n  /**\n   * Update collection from criteria\n   *\n   * @param {Object} criteria - MongoDb criteria Object\n   * @param {Object} newValues - key-value Object with new data\n   * @param {Object} options - Storage option\n   * @return {Promise<integer, Error>} - number of updated items\n   * @access public\n   * @abstract\n   */\n  update(criteria={}, newValues={}, options={}) {\n    throw new Error('AbstractStorage: Method not set up');\n  }\n\n  /**\n   * Delete collection Object from criteria\n   *\n   * @param {Object} criteria - MongoDb criteria Object\n   * @return {Promise<integer, Error>} - number of deleted items\n   * @access public\n   * @abstract\n   */\n  delete(criteria) {\n    throw new Error('AbstractStorage: Method not set up');\n  }\n}\n"],"sourceRoot":"/source/"}