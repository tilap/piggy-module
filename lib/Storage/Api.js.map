{"version":3,"sources":["Storage/Api.js"],"names":[],"mappings":"u0DAA4B,YAAY,uDAElC,UAAU,uCAAV,UAAU,4BAAV,UAAU,wBAAV,UAAU,6BAAV,UAAU,oEAAV,UAAU,mBAEX,cAA6B,KAA5B,QAAQ,qDAAG,EAAE,kBAAE,OAAO,qDAAE,EAAE,cAC5B,IAAI,MAAM,CAAG,KAAK,CAAC,AACnB,IAAI,IAAI,CAAG,EAAE,CAAC,AACd,IAAI,MAAM,CAAG,EAAE,CAAC,AAChB,OAAO,IAAI,CAAC,WAAW,CAAC,MAAM,CAAE,IAAI,CAAE,MAAM,CAAC,CAC1C,IAAI,CAAE,SAAA,MAAM,CAAI,CACf,KAAK,CAAC,QAAQ,CAAC,CAAC,AAChB,KAAK,CAAC,MAAM,CAAC,CAAC,AACd,OAAO,MAAM,CAAC,CACf,CAAC,SACI,CAAE,SAAA,GAAG,CAAI,CACb,KAAK,CAAC,OAAO,CAAC,CAAC,AACf,KAAK,CAAC,KAAK,CAAC,CAAC,AACb,MAAM,IAAI,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAC9B,CAAC,CAAC,CACN,sBAEK,gBAAC,MAAM,CAAE,CACb,IAAI,MAAM,CAAG,MAAM,CAAC,CAErB,sBAEK,iBAAwC,KAAvC,QAAQ,qDAAC,EAAE,kBAAE,SAAS,qDAAC,EAAE,kBAAE,OAAO,qDAAC,EAAE,cAC1C,IAAI,MAAM,CAAG,OAAO,CAAC,CAEtB,sBAEK,iBAAC,QAAQ,CAAE,CACf,IAAI,MAAM,CAAG,QAAQ,CAAC,CAEvB,gCAEe,2BAAG,CACjB,OAAO,CACL,MAAM,CAAE,KAAK,CACb,OAAO,CAAE,CACP,QAAQ,CAAE,kBAAkB,CAC5B,cAAc,CAAE,kBAAkB,CACnC,CACD,IAAI,CAAE,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CACzB,CAAC,CACH,2BAEU,qBAAC,MAAM,CAAsB,KAApB,IAAI,qDAAC,EAAE,kBAAE,MAAM,qDAAC,EAAE,cACpC,IAAI,GAAG,CAAG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,AAClC,IAAI,OAAO,CAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC,AACtC,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC,AAExB,OAAO,IAAI,OAAO,CAAE,SAAC,OAAO,CAAE,MAAM,CAAK,CACvC,KAAK,CAAC,GAAG,CAAE,OAAO,CAAC,CAChB,IAAI,CAAC,SAAS,QAAQ,CAAE,CACjC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAE,QAAQ,CAAC,CAAC,AAExB,GAAI,QAAQ,CAAC,MAAM,GAAG,GAAG,IAAI,QAAQ,CAAC,MAAM,IAAI,GAAG,CAAE,CAC/D,OAAO,CAAC,GAAG,CAAC,OAAO,CAAE,KAAK,CAAC,CAAC,AAChB,IAAI,KAAK,CAAG,IAAI,KAAK,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAA,AAC1C,KAAK,CAAC,QAAQ,GAAG,QAAQ,CAAA,AACzB,OAAO,MAAM,CAAC,KAAK,CAAC,CAAC,CACtB,AACD,OAAO,QAAQ,CAAC,CACjB,CAAC,CACD,IAAI,CAAC,SAAA,QAAQ,CAAI,CAC1B,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAE,QAAQ,CAAC,MAAM,CAAC,CAAC,AACvC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAE,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC,AAC3B,OAAO,OAAO,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC,CACjC,CAAC,SACI,CAAE,SAAC,GAAG,CAAK,CACf,OAAO,MAAM,CAAC,GAAG,CAAC,CAAC,CACpB,CAAC,CAAC,CACN,CAAC,CAAC,CACJ,WAxEG,UAAU","file":"Storage/Api.js","sourcesContent":["import AbstractStorage from './Abstract';\n\nclass ApiStorage extends AbstractStorage {\n\n  get(criteria = {}, options= {}) {\n    let method = 'GET';\n    let path = '';\n    let params = {};\n    return this._runRequest(method, path, params)\n      .then( result => {\n        alert('result');\n        alert(result);\n        return result;\n      })\n      .catch( err => {\n        alert('error');\n        alert(error);\n        throw new Error(err.message);\n      });\n  }\n\n  insert(voData) {\n    let method = 'POST';\n\n  }\n\n  update(criteria={}, newValues={}, options={}) {\n    let method = 'PATCH';\n\n  }\n\n  delete(criteria) {\n    let method = 'DELETE';\n\n  }\n\n  getFetcherOption() {\n    return {\n      method: 'get',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({})\n    };\n  }\n\n  _runRequest(method, path='', params={}) {\n    let url = this._collection + path;\n    let options = this.getFetcherOption();\n    options.method = method;\n\n    return new Promise( (resolve, reject) => {\n      fetch(url, options)\n        .then(function(response) {\nconsole.log('response', response);\n\n          if (response.status < 200 || response.status >= 300) {\nconsole.log('error', error);\n            var error = new Error(response.statusText)\n            error.response = response\n            return reject(error);\n          }\n          return response;\n        })\n        .then(response => {\nconsole.log('status', response.status);\nconsole.log('json', response.json());\n          return resolve(response.json());\n        })\n        .catch( (err) => {\n          return reject(err);\n        });\n    });\n  }\n}\n"],"sourceRoot":"/source/"}