{"version":3,"sources":["Validator.js"],"names":[],"mappings":"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","file":"Validator.js","sourcesContent":["import { ValidatorError } from './Errors';\nimport validatorLib from './utils/validatorLib';\n\nexport default class Validator {\n\n  constructor(vo=null) {\n    this._vo = vo;\n    this.errors = {};\n  }\n\n  validateVo() {\n    let properties = this._vo.constructor.getPropertiesNames();\n    this.errors = {};\n    properties.forEach( property => {\n      try {\n        this.constructor.checkProperty(property, this._vo[property]);\n      }\n      catch(err) {\n        this.errors[property] = err.message;\n      }\n    });\n    return this;\n  }\n\n  hasError() {\n    return Object.keys(this.errors).length > 0;\n  }\n\n  static isPropertyUnique(property) {\n    return this.uniques.indexOf(property) > -1;\n  }\n\n  static isPropertyRequired(property) {\n    return this.required.indexOf(property) > -1;\n  }\n\n  static hasRulesFor(key) {\n    return this.rules[key] ? true : false;\n  }\n\n  // Get a property validation rules\n  static getRulesFor(key) {\n    return this.rules[key] ? this.rules[key] : [];\n  }\n\n  static needToCheckProperty(property, value) {\n    let skipIfEmpty = !this.isPropertyRequired(property);\n    let isEmpty = !Validator.validate('required', value);\n\n    return (isEmpty && skipIfEmpty) ? false : true;\n  }\n\n  static checkProperty(property, value) {\n    if(this.needToCheckProperty(property, value)) {\n      this.getRulesFor(property).forEach( validator => {\n        let args = validator.args || [];\n        let skipIfEmpty = !this.isPropertyRequired(property);\n\n        if(args.constructor!==Array) {\n          args = [args];\n        }\n        if(!this.validate(validator.fct, value, args, skipIfEmpty)) {\n          throw new ValidatorError(validator.msg);\n        }\n      });\n    }\n    return true;\n  }\n\n  // Run a validator rules and get the result\n  static validate(fct, value, args=[], skipIfEmpty=false) {\n    // @tocheck if really usefull...\n    if(skipIfEmpty && !value) {\n      return true;\n    }\n\n    let funcArgs = [value].concat(args);\n    if(fct.constructor === Function) {\n      return fct.apply(null, funcArgs);\n    }\n    if(fct.constructor === String) {\n      return validatorLib[fct].apply(null, funcArgs);\n    }\n    throw new ValidatorError('Wrong validator function');\n  }\n\n}\n\nValidator.initFromVoClass = function(ValidatorChild, properties) {\n  let ruleset = {};\n  let requiredProperties = [];\n  let uniqueProperties = [];\n\n  Object.keys(properties).forEach((name) => {\n    let isRequired = properties[name].required && true===properties[name].required;\n    let isUnique = properties[name].unique && true===properties[name].unique;\n    let validators = properties[name].validators || [];\n    ruleset[name] = [];\n\n    if(isUnique) {\n      uniqueProperties.push(name);\n    }\n    if(isRequired) {\n      requiredProperties.push(name);\n    }\n\n    validators.forEach( itemCfg => {\n      if(!itemCfg.fct) {\n        throw new Error('Configuration error: validator need a fct');\n      }\n      ruleset[name].push({\n        fct: itemCfg.fct,\n        msg: itemCfg.msg || '',\n        args: itemCfg.args || [],\n        skipIfEmpty: !isRequired\n      });\n    });\n  });\n\n  Object.defineProperty(ValidatorChild, 'rules', {\n    enumerable: false,\n    writable: false,\n    configurable: false,\n    value: ruleset\n  });\n\n  Object.defineProperty(ValidatorChild, 'required', {\n    enumerable: false,\n    writable: false,\n    configurable: false,\n    value: requiredProperties\n  });\n\n  Object.defineProperty(ValidatorChild, 'uniques', {\n    enumerable: false,\n    writable: false,\n    configurable: false,\n    value: uniqueProperties\n  });\n};\n"],"sourceRoot":"/source/"}