{"version":3,"sources":["Manager.js"],"names":[],"mappings":"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","file":"Manager.js","sourcesContent":["import ManagerError from './Errors';\n\nexport default class Manager {\n\n  constructor(storage) {\n    this.storage = storage;\n  }\n\n  assumeIsOwnVoClass(vo) {\n    if(vo.constructor.name !== this.constructor.voClass.name) {\n      throw new ManagerError('Require a ' + this.constructor.voClass.name + ' class');\n    }\n  }\n\n  getNewVo(data={}) {\n    return new this.constructor.voClass(data);\n  }\n\n  get(criteria={}, options={}) {\n    return this.storage.get(criteria, options)\n      .catch( err => {\n        throw new ManagerError(err.message);\n      })\n      .then( items => {\n        let res = [];\n        items.map( item => {\n          res.push(this.getNewVo(item));\n        });\n        return res;\n      })\n      .catch( err => {\n        throw new ManagerError(err.message);\n      });\n  }\n\n  saveOne(vo) {\n    return vo.id ? this.updateOne(vo) : this.insertOne(vo);\n  }\n\n  insertOne(vo) {\n    this.assumeIsOwnVoClass(vo);\n    return new Promise( (resolve, reject) => {\n      this.getAllVoErrors(vo)\n        .then( errors => {\n          if(Object.keys(errors).length>0) {\n            return reject(errors);\n          }\n\n          this.storage.insert(vo.data)\n            .then(newItemData => {\n              resolve(this.getNewVo(newItemData));\n            })\n        })\n        .catch(err => {\n          reject( new ManagerError(err.message) );\n        });\n    });\n  }\n\n  updateOne(vo) {\n    this.assumeIsOwnVoClass(vo);\n    return new Promise( (resolve, reject) => {\n      return this.getAllVoErrors(vo)\n        .then( errors => {\n          if(Object.keys(errors).length > 0) {\n            return reject(errors);\n          }\n          let criteria = {_id: vo.id};\n          this.storage.update(criteria, vo.data)\n            .then( () => this.get(criteria) )\n            .then(items => {\n              resolve(items[0]);\n            });\n        })\n        .catch(err => {\n          reject( new ManagerError(err.message) );\n        });\n    });\n  }\n\n  delete(vosArr) {\n    return new Promise( (resolve, reject) => {\n      let ids = [];\n      vosArr.forEach( vo => {\n        ids.push(vo.id);\n      });\n\n      let criteria = { _id: { $in: ids}};\n      this.storage.delete(criteria)\n        .then(\n          deletedItemCount => {\n            resolve(deletedItemCount);\n          },\n          err => {\n            reject(err);\n          }\n        );\n    });\n  }\n\n  deleteOne(vo) {\n    this.assumeIsOwnVoClass(vo);\n    return new Promise( (resolve, reject) => {\n      let criteria = { _id: vo.id };\n      this.storage.delete(criteria)\n        .then(\n          deletedItemCount => {\n            resolve(deletedItemCount===1);\n          },\n          err => {\n            reject(err);\n          }\n        );\n    });\n  }\n\n  getByUniqueProperty(property, value) {\n    return new Promise( (resolve, reject) => {\n      // Check property is a unique one\n      if(!this.constructor.validatorClass.isPropertyUnique(property)) {\n        return reject(new Error('The property \"' + property + '\" is not unique'));\n      }\n\n      // @todo add cast to value\n      // value = this.constructor.voClass.castVoPropertyValue(property, value);\n\n      let criteria = {};\n      criteria[property] = value;\n\n      this.get(criteria)\n        .then( result => {\n          switch(result.length) {\n            case 0:\n              resolve(null);\n              break;\n            case 1:\n              resolve(result[0]);\n              break;\n            default:\n              reject(new Error('Got multiple object and must only get one'));\n          }\n        }, err => {\n          reject(err);\n        });\n    });\n  }\n\n  // Get objects having a unique property in the values array\n  getByUniquePropertyM(property, values) {\n    return new Promise( (resolve, reject) => {\n      if(!this.constructor.validatorClass.isPropertyUnique(property)) {\n        return reject(new Error('The property \"' + property + '\" is not unique'));\n      }\n\n      if(values.constructor!==Array) {\n        return reject(new Error('Values must be an array'));\n      }\n\n      let criteria = {};\n      criteria[property] = { $in: values};\n      this.get(criteria)\n        .then( results => {\n          resolve(results);\n        }, err => {\n          reject(err);\n        });\n    });\n  }\n\n  getAllVoErrors(vo, skipProperties= []) {\n    this.assumeIsOwnVoClass(vo);\n    return new Promise( (resolve, reject) => {\n      Promise.all( [this.getVoFormatErrors(vo), this.getVoUniqueErrors(vo), this.getVoBusinessErrors(vo)] )\n        .then(\n          errorsArrays => {\n            let errors = {};\n            errorsArrays.map( errorType => {\n              Object.keys(errorType).map( field => {\n                if(!errors[field] && skipProperties.indexOf(field) < 0) {\n                  errors[field] = errorType[field];\n                }\n              });\n            });\n            resolve(errors);\n          },\n          err => {\n            reject(err);\n          }\n        );\n    });\n\n  }\n\n  getVoFormatErrors(vo) {\n    this.assumeIsOwnVoClass(vo);\n    return new Promise( (resolve) => {\n      let validator = new this.constructor.validatorClass(vo);\n      validator.validateVo();\n      resolve(validator.hasError() ? validator.errors : {});\n    });\n  }\n\n  getVoUniqueErrors(vo) {\n    this.assumeIsOwnVoClass(vo);\n    let result = {};\n    let promises = [];\n\n    this.constructor.validatorClass.uniques.forEach( property => {\n      let value = vo[property];\n\n      // Skip if empty and not required\n      if(this.constructor.validatorClass.needToCheckProperty(property, value)) {\n        let p = this.getByUniqueProperty(property, value)\n          .then ( foundVo => {\n            if(foundVo==null) {\n              return null;\n            }\n            if(!vo.id) {\n              return property;\n            }\n            if(String(vo.id)===String(foundVo.id)) {\n              return null;\n            }\n            return property;\n          });\n        promises.push(p);\n      }\n    });\n\n    if(promises.length === 0) {\n      return Promise.resolve({});\n    }\n\n    return Promise.all(promises)\n      .then( propertiesWithError => {\n\n        propertiesWithError.forEach( property => {\n          if(property) {\n            result[property] = 'unique';\n          }\n        });\n        return result;\n      });\n  }\n\n  // To extend to run business check on the VO\n  getVoBusinessErrors(vo) {\n    this.assumeIsOwnVoClass(vo);\n    return new Promise( (resolve) => {\n      return resolve({});\n    });\n  }\n}\n\n\nManager.init = function(ManagerChild, VoClass, ValidatorClass) {\n\n  Object.defineProperty(ManagerChild, 'voClass', {\n    enumerable: false,\n    writable: false,\n    configurable: false,\n    value: VoClass\n  });\n\n  Object.defineProperty(ManagerChild, 'validatorClass', {\n    enumerable: false,\n    writable: false,\n    configurable: false,\n    value: ValidatorClass\n  });\n\n  VoClass.getPropertiesNames().forEach( property => {\n    if(ValidatorClass.isPropertyUnique(property)) {\n      let cleanProperty = property.replace(/([^a-z])/ig, '');\n      let methodName = 'getBy' + cleanProperty.charAt(0).toUpperCase() + cleanProperty.substr(1).toLowerCase();\n      // ManagerChild.prototype[methodName] = (value) => {\n      //   return this.getByUniqueProperty(property, value);\n      // }\n      ManagerChild.prototype[methodName] = (value) => {\n        return this.getByUniqueProperty(property, value);\n      }\n      // Object.defineProperty(ManagerChild, methodName, {\n      //   enumerable: false,\n      //   writable: false,\n      //   configurable: false,\n      //   value: (value) => {\n      //     return ManagerChild.getByUniqueProperty(property, value);\n      //   }\n      // });\n    }\n  });\n};\n"],"sourceRoot":"/source/"}